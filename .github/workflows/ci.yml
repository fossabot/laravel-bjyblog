name: CI

on: [push, pull_request]

jobs:
  phpunit-feature:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: baijunyao/mysql
        env:
          MYSQL_ROOT_PASSWORD: laravel_bjyblog
          MYSQL_DATABASE: laravel_bjyblog
    container:
      image: baijunyao/php:local
      volumes:
        - .:/app
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Initial
        run: |
          cp .env.actions .env
          composer install
          php artisan key:generate
          php artisan passport:keys
          php artisan migrate
          php artisan db:seed
      - name: Test Feature
        run: |
          ./vendor/bin/phpunit --testsuite Feature
  phpunit-commands:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: baijunyao/mysql
        env:
          MYSQL_ROOT_PASSWORD: laravel_bjyblog
          MYSQL_DATABASE: laravel_bjyblog
    container:
      image: baijunyao/php:local
      volumes:
        - .:/app
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Initial
        run: |
          cp .env.actions .env
          composer install
          php artisan key:generate
          php artisan passport:keys
          php artisan migrate
          php artisan db:seed
      - name: Test Commands
        run: |
          ./vendor/bin/phpunit --testsuite Commands
  phpunit-unit:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: baijunyao/mysql
        env:
          MYSQL_ROOT_PASSWORD: laravel_bjyblog
          MYSQL_DATABASE: laravel_bjyblog
    container:
      image: baijunyao/php:local
      volumes:
        - .:/app
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Initial
        run: |
          cp .env.actions .env
          composer install
          php artisan key:generate
          php artisan passport:keys
          php artisan migrate
          php artisan db:seed
      - name: Test Unit
        run: |
          ./vendor/bin/phpunit --testsuite Unit
  notify:
    runs-on: ubuntu-latest
    needs: [phpunit-feature, phpunit-commands, phpunit-unit]
    steps:
      - name: Slack Success Notify
        if: success()
        uses: baijunyao/action-slack-notify@master
        with:
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          status: success
          channel: CEWJP77BP
      - name: Slack Failure Notify
        if: failure()
        uses: baijunyao/action-slack-notify@master
        with:
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          status: failure
          channel: CEWJP77BP
